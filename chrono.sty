
%% timerAoffset, timerAioffset => don't change during the timer!
%% => only in env?

\RequirePackage{xstring}
\RequirePackage{tikz}
\RequirePackage{pgfkeys}
\usetikzlibrary{decorations.pathmorphing}
\usetikzlibrary{calc}

\colorlet{graphicbackground}{white}

\pgfkeys{/chrono/.search also={/tikz}}


\newif\ifdebug
%\debugtrue
\newcommand{\debug}[1]{
  \ifdebug\typeout{#1}\fi}

%%%%%% option keys

% arrow cmd keys
\pgfkeys{
  /chrono/global/.is family,
  /chrono/trans/.belongs to family=/chrono/global,
  /chrono/sh/.belongs to family=/chrono/global,
  /chrono/prop/.belongs to family=/chrono/global,
  /chrono/late/.belongs to family=/chrono/global,
  /chrono/snote/.belongs to family=/chrono/global,
  /chrono/rnote/.belongs to family=/chrono/global,
  /chrono/snoteoffset/.belongs to family=/chrono/global,
  /chrono/rnoteoffset/.belongs to family=/chrono/global,
  /chrono/name/.belongs to family=/chrono/global,
  /chrono/id/.belongs to family=/chrono/global,
  /chrono/.belongs to family=/chrono/global,
}

%% ZZZ do we need that? yes for prop and trans...
\pgfkeys{/pgf/key filters/active families/.install key filter}

\pgfkeys{/chrono/prop/.default=1cm,/chrono/prop/.code=\setlength{\prop}{#1}}
\pgfkeys{/chrono/trans/.default=10mm,/chrono/trans/.code=\ifchronoh\setlength{\trans}{#1}\fi}
\pgfkeyssetvalue{/chrono/short trans}{7mm}
\pgfkeys{/chrono/sh/.style=trans=5mm}
\pgfkeys{/chrono/late/.default=4cm,/chrono/late/.code=\chronolatetrue\setlength{\chronolatev}{#1}}

\pgfkeys{/chrono/lost/.is if=chronolost}
\pgfkeys{/chrono/cross for lost/.is if=chronocrosslost}
\pgfkeys{/chrono/bad/.is if=chronobad}
\pgfkeys{/chrono/snote/.code=\gdef\chronosnote{#1}}
\pgfkeys{/chrono/rnote/.code=\gdef\chronornote{#1}}
\pgfkeys{/chrono/snoteoffset/.code=\def\chronosnoteoffset{#1}}
\pgfkeys{/chrono/snoteoffset/.default=0}
\pgfkeys{/chrono/rnoteoffset/.code=\def\chronornoteoffset{#1}}
\pgfkeys{/chrono/rnoteoffset/.default=0}
\pgfkeys{/chrono/noteoffset/.style={snoteoffset=#1,rnoteoffset=#1}}
\pgfkeys{/chrono/name/.code=\def\chrononame{#1}}
\pgfkeys{/chrono/opacity/.style={/tikz/opacity=#1,/tikz/text opacity=#1}}

\pgfkeys{/chrono/show label2/.is if=showlabelii}
\pgfkeys{/chrono/hide label/.is if=hidelabel}
\pgfkeyssetvalue{/chrono/ghost}{0}
\pgfkeys{/chrono/hide/.code=\chronosethides{#1}}

\pgfkeyssetvalue{/chrono/label2}{}


\def\chronosnote{\relax}
\def\chronornote{\relax}
\def\chronosnoteoffset{3mm}
\def\chronornoteoffset{3mm}
\def\chrononame{late}

\pgfkeys{/chrono/timerAoffset/.style={/chrono/default/timers/l/1/offset=#1}}
\pgfkeys{/chrono/timerAioffset/.style={/chrono/default/timers/l/2/offset=#1}}

\pgfkeys{/chrono/timerBoffset/.style={/chrono/default/timers/r/1/offset=#1}}
\pgfkeys{/chrono/timerBioffset/.style={/chrono/default/timers/r/2/offset=#1}}

\pgfkeys{/chrono/timer offset/.style={/chrono/timerAoffset=#1,/chrono/timerBoffset=#1}}
\pgfkeys{/chrono/timeri offset/.style={/chrono/timerAioffset=#1,/chrono/timerBioffset=#1}}

\pgfkeys{/chrono/timerleftbottomup/.is if=timerleftbottomup}
\pgfkeys{/chrono/timerleftbelow/.is if=timerleftbelow}

% since we fail to define several keys in a \if
\pgfkeys{/chrono/reverse/.style={/tikz/rotate=180,/tikz/above}}

\pgfkeys{/chrono/action time offset/.code=\setlength{\chronoactiontimeoffset}{#1}}
\pgfkeys{/chrono/action offset/.code=\setlength{\chronoactionoffset}{#1}}
\pgfkeys{/chrono/action length/.code=\setlength{\chronoactionlength}{#1}}
\pgfkeys{/chrono/state offset/.code=\setlength{\chronostateoffset}{#1}}

\pgfkeys{/chrono/space same/.code=\setlength{\chronospacesame}{#1}}
\pgfkeys{/chrono/space other/.code=\setlength{\chronospaceother}{#1}}

% chrono env keys
\pgfkeys{/chrono/width/.code=\def\chronowidth{#1}}
\pgfkeyssetvalue{/chrono/A}{}
\pgfkeys{/chrono/A/.default=A}
\pgfkeyssetvalue{/chrono/B}{}
\pgfkeys{/chrono/B/.default=B}

% by default frames whose label starts with ACK are short
% key no shorts remove this rule
% key hdlc sets names for HDLC
% key shorts=list sets the names of short frames

\def\chronoshorts{ACK}
\def\chronoshortshdlc{RR,RNR,REJ,SREJ,SABM,DISC,UA}

\pgfkeys{/chrono/hdlc/.code=\edef\chronoshorts{\chronoshortshdlc}}
\pgfkeys{/chrono/shorts/.code=\def\chronoshorts{#1}}
\pgfkeys{/chrono/no shorts/.code=\def\chronoshorts{}}


%%%%%% flows

%% the 'main' flowid
\pgfkeyssetvalue{/chrono/id}{main}
\pgfkeyssetvalue{/chrono/flows/main}{}

%% default parameters for ids
\pgfkeyssetvalue{/chrono/default}{}
\pgfkeyssetvalue{/chrono/default/opacity}{1}

%% can not use \foreach since it creates a local scope! :-(
\newcommand{\chronosethides}[1]{
  \pgfkeyssetvalue{/chrono/flows/#1/opacity}{\pgfkeysvalueof{/chrono/ghost}}
%  \foreach \x in { #1 } {
%    \pgfkeyssetvalue{/chrono/ids/\x/opacity}{\pgfkeysvalueof{/chrono/ghost}}
%  }
}


%%%%%% styles

%% define a style: name to set of options
\newcommand{\definestyle}[2]{
  \pgfkeys{/chrono/styles/#1/.style={#2}}}

%% make #1 (dynamically) inherit #2, adding #3 options
\newcommand{\derivestyle}[3]{
  \definestyle{#1}{/chrono/styles/#2,#3}}

%% give a style to a flow
\newcommand{\setflowstyle}[2]{
  \pgfkeys{/chrono/flows/#1/style/.initial=#2}}

\newcommand{\setflowlabelstyle}[2]{
  \pgfkeys{/chrono/flows/#1/labelstyle/.initial=#2}}

%% the default style
%% removed the >=latex, since it does not obey opacity=...
\definestyle{default}{very thick, ->}

\definestyle{labeldefault}{above,sloped}

\pgfkeys{/chrono/styles/thislabel/.style={}}
\pgfkeys{/chrono/label style/.code=\pgfkeys{/chrono/styles/thislabel/.style={{#1}}}}

%%%%%% various definitions

% this will be usefull for creating entities in a \foreach...
\def\pgfglobalkeys#1{\begingroup \ifnum\the\globaldefs>0\relax \else \globaldefs=1\fi \pgfkeys{#1}\endgroup}

\newcommand{\chronocreateentity}[1]{
  \pgfglobalkeys{/chrono/entities/#1/pos/.initial=0cm}
  \pgfglobalkeys{/chrono/entities/#1/Tsend/.initial=0cm}
  \pgfglobalkeys{/chrono/entities/#1/Trecv/.initial=0cm}
  \chronocreatetimer{A}{l}{1}
  \chronocreatetimer{A}{l}{2}
  \chronocreatetimer{B}{r}{1}
  \chronocreatetimer{B}{r}{2}
}

\newcommand{\chronocreatetimer}[3]{ % entity l/r id
  \pgfglobalkeys{/chrono/entities/#1/timer/#2/#3/active/.initial=0}
  \pgfglobalkeys{/chrono/entities/#1/timer/#2/#3/cancel/.initial=0}
  \pgfglobalkeys{/chrono/entities/#1/timer/#2/#3/start/.initial=0}
  \pgfglobalkeys{/chrono/entities/#1/timer/#2/#3/end/.initial=0pt}}

\chronocreateentity{A}
\chronocreateentity{B}

\pgfkeys{/chrono/default/timers/l/1/offset/.initial=4mm}
\pgfkeys{/chrono/default/timers/l/2/offset/.initial=9mm}
\pgfkeys{/chrono/default/timers/r/1/offset/.initial=4mm}
\pgfkeys{/chrono/default/timers/r/2/offset/.initial=9mm}
%% additional offset in horizontal mode
\pgfkeys{/chrono/default/timers/l/1/haddoffset/.initial=-3mm}
\pgfkeys{/chrono/default/timers/l/2/haddoffset/.initial=-3mm}
\pgfkeys{/chrono/default/timers/r/1/haddoffset/.initial=7mm}
\pgfkeys{/chrono/default/timers/r/2/haddoffset/.initial=7mm}

\newcommand{\chronopos}[1]{\pgfkeysvalueof{/chrono/entities/#1/pos}}
\newcommand{\chronoTsend}[1]{\pgfkeysvalueof{/chrono/entities/#1/Tsend}}
\newcommand{\chronoTrecv}[1]{\pgfkeysvalueof{/chrono/entities/#1/Trecv}}

%% beware of 'macro sharing': we use setvalue here!
%% (note how we use pgfkeyslet in \chronoframe)
\newcommand{\chronosetTsend}[2]{\pgfkeyssetvalue{/chrono/entities/#1/Tsend}{#2}}
\newcommand{\chronosetTrecv}[2]{\pgfkeyssetvalue{/chrono/entities/#1/Trecv}{#2}}
\newcommand{\chronoletTsend}[2]{\pgfkeyslet{/chrono/entities/#1/Tsend}{#2}}

%% shortcuts
\def\pAs{\chronoTsend{A}}
\def\pBs{\chronoTsend{B}}
\def\pAr{\chronoTrecv{A}}
\def\pBr{\chronoTrecv{B}}

\newcommand{\chronogetconftimer}[4]{
  \pgfkeysifdefined{/chrono/entities/#1/timers/#2/#3/#4}
  {\pgfkeysvalueof{/chrono/entities/#1/timers/#2/#3/#4}}
  {\pgfkeysvalueof{/chrono/default/timers/#2/#3/#4}}}

\newcommand{\chronogettimerstart}[3]{
  \pgfkeysvalueof{/chrono/entities/#1/timers/#2/#3/start}}
\newcommand{\chronogettimerend}[3]{
  \pgfkeysvalueof{/chrono/entities/#1/timers/#2/#3/end}}


\newif\iftimerleftbottomup
\newif\iftimerleftbelow

\newif\ifshowlabelii
\newif\ifhidelabel

\newif\ifchronoh

\newlength{\chronoxx}

%\pgfkeys{/pgf/key filter handlers/log/.install key filter handler}

\newlength{\chronospacesame}\setlength{\chronospacesame}{1cm}
\newlength{\chronospaceother}\setlength{\chronospaceother}{5mm}
\def\chronowidth{2.75cm}
\newlength{\chronoactiontimeoffset}\setlength{\chronoactiontimeoffset}{1mm}
\newlength{\chronoactionoffset}\setlength{\chronoactionoffset}{1mm}
\newlength{\chronoactionlength}\setlength{\chronoactionlength}{5mm}
\newlength{\chronostateoffset}\setlength{\chronostateoffset}{12mm}

\newif\ifchronobad\chronobadfalse
\newif\ifchronolost\chronolostfalse
\newif\ifchronocrosslost\chronocrosslostfalse
\newif\ifchronolate\chronolatefalse
\newif\ifchronosync\chronosynctrue

\newlength{\prop}\setlength{\prop}{0.5cm}
\newlength{\savedprop}
\newlength{\trans}\setlength{\trans}{2cm}
\newlength{\savedtrans}  %% to keep default value accross frames
\newlength{\ltrans}      %% last used trans value (for timer functions)
\newlength{\chronolatev} %% amount of lateness if chronolatetrue

\newcommand{\chronoaddto}[2]{
  \ifnum \y=1\addtolength{#1}{#2}\else\addtolength{#1}{-#2}\fi
}

% the drawn frame label can be made of:
%  - l1 label (passed as arg to commands)
%  - the l2 label (passed as label2 option key)
%  - both

\newcommand{\chrononodelabel}[2][1]{ % 1/-1, l1 label
  \ifshowlabelii\ifhidelabel\itshape \pgfkeysvalueof{/chrono/label2}\else
  \ifnum #1=1
  \begin{tabular}{c}
    \itshape \pgfkeysvalueof{/chrono/label2}\\
    #2
  \end{tabular}\else
  \begin{tabular}{c} % for A in hchrono, we want label2 to be below
    #2 \\
    \itshape \pgfkeysvalueof{/chrono/label2}
  \end{tabular}\fi
  \fi\else\ifhidelabel{}\else#2\fi\fi}

% #1 are keys, #2 is sender pos, #3 is receiver pos
% #4 is send time, #5 is label

\newlength{\chronolen}

\newcommand{\chronoarrowv}[5][]{
  \pgfkeysifdefined{/chrono/flows/\chronoid/labelstyle}
  {\def\labelstyle{/chrono/styles/\pgfkeysvalueof{/chrono/flows/\chronoid/labelstyle}}}
  {\def\labelstyle{/chrono/styles/labeldefault}}
  \def\thisls{/chrono/styles/thislabel}

  %% tex does not honor arithmetic priorities... pgfmath does.
  \pgfmathsetlength{\chronolen}{#3-#2}
  \pgfmathsetmacro{\sign}{#2<#3?1:-1}

  \begin{scope}[/chrono/.cd,#1]
    \ifchronolost\def\lost{2}\else\def\lost{1}\fi
    \ifchronobad

       \draw (#2,#4) --++(\chronolen/\lost/3,-\prop/\lost/3)

                 \ifchronosync\else node[near end,\labelstyle,\thisls]{\chrononodelabel{#5}}\fi
    
                 decorate[decoration=zigzag,segment length=2mm]
                 {--++(\chronolen/\lost/3,-\prop/\lost/3)
                   \ifchronosync node[midway,\labelstyle,\thisls]{\chrononodelabel{#5}}\fi}

                 --++(\chronolen/\lost/3,-\prop/\lost/3);
                   \ifchronolost\ifchronocrosslost \draw[-]
                   (\sign*2mm,#4-\prop/2)node{\Large $\times$}\fi\fi;
    \else
    \ifchronolate
       \draw (#2,#4) 
       .. controls (0,#4-\prop/2) and (0,#4-\chronolatev)
       .. (#3, #4-\chronolatev-\prop)
                   node[\labelstyle,\thisls,pos=0.1]{\chrononodelabel{#5}};

    \else
       \draw (#2,#4) -- ++(\chronolen/\lost,-\prop/\lost)
                   node[\ifchronosync midway\else near
                   start\fi,\labelstyle,\thisls]{\chrononodelabel{#5}};
                   \ifchronolost\ifchronocrosslost \draw[-]
                   (\sign*2mm,#4-\prop/2)node{\Large $\times$}\fi\fi;
    \fi
    \fi
  \end{scope}
}

\newcommand{\chronoarrowh}[5][]{
  \pgfkeysifdefined{/chrono/flows/\chronoid/labelstyle}
  {\def\labelstyle{/chrono/styles/\pgfkeysvalueof{/chrono/flows/\chronoid/labelstyle}}}
  {\def\labelstyle{/chrono/styles/labeldefault}}
  \def\thisls{/chrono/styles/thislabel}

  \pgfmathsetlength{\chronolen}{#2-#3}
  \pgfmathtruncatemacro{\sign}{#2<#3?1:-1}

  \begin{scope}[/chrono/.cd,#1,|-|]
  \ifnum \sign>0\def\toto{above}\else\def\toto{below}\fi
  \ifchronolost\def\lost{2}\else\def\lost{1}\fi
  \ifchronobad

       \draw (#4,#3) --++(\trans/3,0)
                 decorate[decoration=zigzag,segment length=2mm]
                 {--++(\trans/3,0) node[\labelstyle,\thisls,\toto=1mm,midway]{\chrononodelabel[\sign]{#5}}}
                 --++(\trans/3,0);
  \else
       \draw (#4,#3) -- ++(\trans,0)
           node[\labelstyle,\thisls,\toto=1mm,midway]{\chrononodelabel[\sign]{#5}};
  \fi
  % draw propagation arrow
  \draw[thin,->] (#4+\trans,#3) -- ++ (\prop/\lost,\chronolen/\lost);
  \ifchronolost\ifchronocrosslost \draw[-]
        (#4+\trans+\prop/2,\sign*-2mm) node{\Large $\times$}\fi\fi;
  \end{scope}
}

%%%%%% handling of timers


\def\timerAend{\chronogettimerend{A}{l}{1}}
\def\timerAiend{\chronogettimerend{A}{l}{2}}
\def\timerBend{\chronogettimerend{B}{r}{1}}
\def\timerBiend{\chronogettimerend{B}{r}{2}}


\def\timerAoffset{\pgfkeysvalueof{/chrono/default/timers/l/1/offset}}
\def\timerBoffset{\pgfkeysvalueof{/chrono/default/timers/r/1/offset}}
\def\timerAioffset{\pgfkeysvalueof{/chrono/default/timers/l/2/offset}}
\def\timerBioffset{\pgfkeysvalueof{/chrono/default/timers/r/2/offset}}

%% so that arrows of consecutive timers are spaced a very little bit
\newlength{\timertimeoffset}\setlength{\timertimeoffset}{0.2mm}
\pgfkeys{/chrono/timer time offset/.code=\setlength{\timertimeoffset}{#1}}

%% in hchrono, timers hpos need to be offset up or down
\newlength{\chronoAhaddoffset}\setlength{\chronoAhaddoffset}{-3mm}
\newlength{\chronoAihaddoffset}\setlength{\chronoAihaddoffset}{-3mm}
\newlength{\chronoBhaddoffset}\setlength{\chronoBhaddoffset}{7mm}
\newlength{\chronoBihaddoffset}\setlength{\chronoBihaddoffset}{7mm}

\newcommand{\chronoendtimerifactive}[3]{
  \if\pgfkeysvalueof{/chrono/entities/#1/timers/#2/#3/active}t
  \chronoendtimer{#1}{#2}{#3}\fi}

%% timer h position: based on hpos, l/r alignment and offset
%% in horizontal, hpos is negated (left/- is up/+)
%% in vertical, remove 3mm to l timers if neither timerleftbelow nor
%% timerleftbottomup is set

\newcommand{\setchronotimerhpos}[4]{ % entity/lr/id macro
  \debug{timerhpos #1/#2/#3}
  \def\pos{\chronopos{#1}}
  \def\offset{\chronogetconftimer{#1}{#2}{#3}{offset}}
  \def#4{%
  \ifchronoh-\pos+\if #2r-\offset\else\offset\fi
  \else
  \pos+\if #2r\offset\else\iftimerleftbelow-\offset\else\iftimerleftbottomup-\offset
  \else-\offset-3mm\fi\fi\fi\fi}}

\newcommand{\settimer}[6]{ % entity, l/r, id, starttime, len, label
  \chronoendtimerifactive{#1}{#2}{#3}
  \pgfkeyssetvalue{/chrono/entities/#1/timers/#2/#3/active}{t}
  \pgfkeyssetvalue{/chrono/entities/#1/timers/#2/#3/cancel}{0}
  \def\timeroffset{\chronogetconftimer{#1}{#2}{#3}{offset}}
  \def\timerhoffset{\chronogetconftimer{#1}{#2}{#3}{haddoffset}}
  \pgfkeyslet{/chrono/entities/#1/timers/#2/#3/start}{#4}
  \pgfmathsetlengthmacro\temp{#4+\y*#5}
  \pgfkeyslet{/chrono/entities/#1/timers/#2/#3/end}{\temp}
  \def\timerstart{\chronogettimerstart{#1}{#2}{#3}}
  \def\timerend{\chronogettimerend{#1}{#2}{#3}}

  %% the timer label is placed above except if:
  %% - it's a left timer and timerleftbelow is set (placed below)
  %% - it's a left timer and timerleftbottomup is set (placed above +
  %% rotate).  We use /chrono/reverse in this case cause we don't know
  %% how to pass two keys in a single macro...
  
  \if#2r\def\above{above}\else
  \iftimerleftbelow\def\above{below}\else
  \iftimerleftbottomup\def\above{/chrono/reverse}\else
  \def\above{above}\fi
  \fi\fi

  \chronodebugtimer{settimer}{#1}{#2}{#3}
  \setchronotimerhpos{#1}{#2}{#3}{\hpos}
  \ifchronoh
      \draw[thin,dotted,<->](\timerstart,\hpos-\timerhoffset) -- (\timerend,\hpos-\timerhoffset)
                         node[midway,sloped,above]{#6};
  \else
      \draw[thin,dotted,<->](\hpos,\timerstart-\timertimeoffset)
                         -- (\hpos,\timerend+\timertimeoffset) node[midway,sloped,\above]{#6};
  \fi
}

\newcommand{\settimerA}[3]{ % time, len, label
  \settimer{A}{l}{1}{#1}{#2}{#3}}

\newcommand{\settimerAi}[3]{
  \settimer{A}{l}{2}{#1}{#2}{#3}}

\newcommand{\settimerB}[3]{
  \settimer{B}{r}{1}{#1}{#2}{#3}}

\newcommand{\settimerBi}[3]{
  \settimer{B}{r}{2}{#1}{#2}{#3}}


\newcommand{\chronodebugtimer}[4]{
  \debug{#1 timer #2/#3/#4}
  \debug{start \chronogettimerstart{#2}{#3}{#4}}
  \debug{end   \chronogettimerend{#2}{#3}{#4}}
}

\newcommand{\canceltimer}[4]{ % entity, l/r, id, time
  \chronodebugtimer{canceltimer}{#1}{#2}{#3}
  \pgfkeyssetvalue{/chrono/entities/#1/timers/#2/#3/active}{0}
  \pgfkeyssetvalue{/chrono/entities/#1/timers/#2/#3/cancel}{t}
  \def\timerstart{\chronogettimerstart{#1}{#2}{#3}}
  \def\timerend{\chronogettimerend{#1}{#2}{#3}}
  \def\timeroffset{\chronogetconftimer{#1}{#2}{#3}{offset}}
  \def\timerhoffset{\chronogetconftimer{#1}{#2}{#3}{haddoffset}}

  \setchronotimerhpos{#1}{#2}{#3}{\hpos}
  \ifchronoh
    \ifdim#4>\timerend\typeout{Expired timer!}
    \node at (#4,\hpos)[draw,red,fill=yellow]{Expired timer!};\else
    \draw[thin,<-](\timerstart,\hpos-\timerhoffset) --(#4,\hpos-\timerhoffset);
    \fi
  \else
    \ifdim#4<\timerend\typeout{Expired timer!}
    \node at (\hpos,#4)[draw,red,fill=yellow]{Expired timer!};\else
    \draw[thin,<-](\hpos,\timerstart-\timertimeoffset) --(\hpos,#4);
    \fi
  \fi
}

\newcommand{\canceltimerA}[1]{\canceltimer{A}{l}{1}{#1}}
\newcommand{\canceltimerAi}[1]{\canceltimer{A}{l}{2}{#1}}
\newcommand{\canceltimerB}[1]{\canceltimer{B}{r}{1}{#1}}
\newcommand{\canceltimerBi}[1]{\canceltimer{B}{r}{2}{#1}}

\newcommand{\chronoendtimer}[3]{
  \pgfkeyssetvalue{/chrono/entities/#1/timers/#2/#3/active}{0}
  \pgfkeyssetvalue{/chrono/entities/#1/timers/#2/#3/cancel}{0}
  \def\timerstart{\chronogettimerstart{#1}{#2}{#3}}
  \def\timerend{\chronogettimerend{#1}{#2}{#3}}
  \def\timeroffset{\chronogetconftimer{#1}{#2}{#3}{offset}}
  \def\timerhoffset{\chronogetconftimer{#1}{#2}{#3}{haddoffset}}
  \setchronotimerhpos{#1}{#2}{#3}{\hpos}
  \ifchronoh
    \draw[thin,<->](\timerstart,\hpos-\timerhoffset)
                -- (\timerend,\hpos-\timerhoffset);
  \else
    \draw[thin,<->](\hpos,\timerstart-\timertimeoffset)
                -- (\hpos,\timerend+\timertimeoffset);
  \fi
}

\newcommand{\chronoendtimerA} {\chronoendtimer{A}{l}{1}}
\newcommand{\chronoendtimerAi}{\chronoendtimer{A}{l}{2}}
\newcommand{\chronoendtimerB} {\chronoendtimer{B}{r}{1}}
\newcommand{\chronoendtimerBi}{\chronoendtimer{B}{r}{2}}


\newcommand{\chronogetconf}[2]{
  \pgfkeysifdefined{/chrono/flows/#1/#2}
  {\pgfkeysvalueof{/chrono/flows/#1/#2}}
  {\pgfkeysvalueof{/chrono/default/#2}}}

\newcommand{\chrononote}[5]{ % timepos, hpos, l/r, offset, note
  \ifchronoh\else\if#5\relax\else
  \if#3l
    \node[align=left,left] at (#2-#4, #1) { #5 };
  \else
    \node[align=right,right] at (#2+#4, #1) { #5 };
  \fi\fi\fi}

%%%%%% high-level commands

\newcommand{\chronoframe}[4][]{ % [#1 keys], #2 label,
                                %  #3 sender #4 receiver
  \edef\sendpos{\pgfkeysvalueof{/chrono/entities/#3/pos}}
  \edef\recvpos{\pgfkeysvalueof{/chrono/entities/#4/pos}}
  \edef\Tsend{\pgfkeysvalueof{/chrono/entities/#3/Tsend}}

  \ifdim\sendpos<\recvpos\def\align{l}\else\def\align{r}\fi

  \setlength{\savedtrans}{\trans}
  \setlength{\savedprop}{\prop}
  \pgfkeys{/chrono/global/.activate family}
  \pgfkeysfiltered{/chrono/.cd,#1}
  \chronosettrans{#2}

  \chrononote{\Tsend}{\sendpos}{\align}{\chronosnoteoffset}{\chronosnote}

  \pgfkeysgetvalue{/chrono/id}{\chronoid}
  \pgfkeysifdefined{/chrono/flows/\chronoid/style}{
    \def\thisstyle{\pgfkeysvalueof{/chrono/flows/\chronoid/style}}}{
    \def\thisstyle{default}}
  \chronoarrow[/chrono/styles/\thisstyle,#1,opacity=\chronogetconf{\chronoid}{opacity}]
              {\sendpos}{\recvpos}{\Tsend}{#2}
 
  \pgfmathsetlengthmacro\Trecv{\Tsend+\y*\prop+\y*\trans}
  \pgfmathsetlengthmacro\Tsend{\Tsend+\y*\trans+\y*\chronospacesame}

  \chrononote{\Trecv-\chronolatev}{\recvpos}{\if\align rl\else r\fi}{\chronornoteoffset}{\chronornote}
  \gdef\chronosnote{\relax}
  \gdef\chronornote{\relax}

  \ifchronolate
    % no simpler way to _copy_ the length value?
    \pgfmathqparse{\Trecv-\chronolatev}
    \pgfkeyslet{/chrono/values/#4/\chrononame}{\pgfmathresult}
    \chronolatefalse
    \setlength\chronolatev{0mm}
  \fi

  \pgfkeyssetvalue{/chrono/id}{main}
  \setlength{\ltrans}{\trans}
  \setlength{\trans}{\savedtrans}
  \setlength{\prop}{\savedprop}

  \pgfkeyslet{/chrono/entities/#3/Tsend}{\Tsend}
  \pgfkeyslet{/chrono/entities/#4/Trecv}{\Trecv}

  \ifchronosync
    \pgfmathsetlengthmacro\Tsndr{\Trecv+\y*\chronospaceother}
    \pgfkeyslet{/chrono/entities/#4/Tsend}{\Tsndr}
  \fi
}

%%: A sends to B, B sends to A

\newcommand{\AB}[2][]{
  \chronoframe[#1]{#2}{A}{B}}

\newcommand{\BA}[2][]{
  \chronoframe[#1]{#2}{B}{A}}

\newcommand{\chaddtosend}[2]{
  \pgfmathsetlengthmacro\temp{\chronoTsend{#1}+\y*#2}
  \pgfkeyslet{/chrono/entities/#1/Tsend}{\temp}}

\newcommand{\chaddtorecv}[2]{
  \pgfmathsetlengthmacro\temp{\chronoTrecv{#1}+\y*#2}
  \pgfkeyslet{/chrono/entities/#1/Trecv}{\temp}}

\newcommand{\wait}[2][1cm]{\chaddtosend{#2}{#1}}

\newcommand{\Await}[1][1cm]{\wait[#1]{A}}
\newcommand{\Bwait}[1][1cm]{\wait[#1]{B}}

%%: A waits for B, B waits for A (usefull only in fullduplex mode)

\newcommand{\XwaitY}[2]{
  \edef\temp{\chronoTrecv{#1}}
  \chronoletTsend{#1}{\temp}
  \debug{Xwait temp=\temp Tsend=\chronoTsend{#1}}
  \chaddtosend{#1}{\chronospaceother}}

\newcommand{\AwaitB}{\XwaitY{A}{B}}
\newcommand{\BwaitA}{\XwaitY{B}{A}}

%%: arg is name set in the late frame ('name' key, defaults to late)
\newcommand{\Awaitlate}[1][late]{
  \chronosetTrecv{A}{\pgfkeysvalueof{/chrono/values/A/#1}}
  \AwaitB}

\newcommand{\Bwaitlate}[1][late]{
  \chronosetTrecv{B}{\pgfkeysvalueof{/chrono/values/B/#1}}
  \BwaitA}
  

%%: A,B waits for its current timer to expire

\newcommand{\chronowaittimer}[3]{
  \edef\timerend{\chronogettimerend{#1}{#2}{#3}}
  \edef\Tsend{\chronoTsend{#1}}
  \ifchronoh \ifdim \Tsend<\timerend\chronoletTsend{#1}{\timerend}\fi
  \else      \ifdim \Tsend>\timerend\chronoletTsend{#1}{\timerend}\fi
  \fi}

\newcommand{\Awaittimer}{\chronowaittimer{A}{l}{1}}
\newcommand{\Awaittimeri}{\chronowaittimer{A}{l}{2}}
\newcommand{\Bwaittimer}{\chronowaittimer{B}{r}{1}}
\newcommand{\Bwaittimeri}{\chronowaittimer{B}{r}{2}}

%%: A sends a timed frame to B

\newcommand{\ABtimed}[4][]{  % [keys], flabel, len, tlabel
  \edef\chronoxx{\pAs}
  \AB[#1]{#2}
  \debug{AB timed: chronoxx \chronoxx}
  \pgfmathsetlengthmacro\temp{\chronoxx+\y*\ltrans}
  \debug{AB timed: chronoxx+ltrans \temp}
  \settimerA{\temp}{#3}{#4}}

\newcommand{\ABtimedi}[4][]{  % [keys], flabel, len, tlabel
  \edef\chronoxx{\pAs}
  \AB[#1]{#2}
  \pgfmathsetlengthmacro\temp{\chronoxx+\y*\ltrans}
  \settimerAi{\temp}{#3}{#4}}

\newcommand{\BAtimed}[4][]{  % [keys], flabel, len, tlabel
  \edef\chronoxx{\pBs}
  \BA[#1]{#2}
  \pgfmathsetlengthmacro\temp{\chronoxx+\y*\ltrans}
  \settimerB{\temp}{#3}{#4}}

\newcommand{\BAtimedi}[4][]{  % [keys], flabel, len, tlabel
  \edef\chronoxx{\pBs}
  \BA[#1]{#2}
  \pgfmathsetlengthmacro\temp{\chronoxx+\y*\ltrans}
  \settimerBi{\temp}{#3}{#4}}

%%: A sends a frame that cancels B's timer

\newcommand{\ABcancel}[2][]{
  \AB[#1]{#2}
  \canceltimerB{\pBr}}

\newcommand{\ABcanceli}[2][]{
  \AB[#1]{#2}
  \canceltimerBi{\pBr}}

\newcommand{\BAcancel}[2][]{
  \BA[#1]{#2}
  \canceltimerA{\pAr}}

\newcommand{\BAcanceli}[2][]{
  \BA[#1]{#2}
  \canceltimerAi{\pAr}}

%%: A sets a timer and sends a frame when it expires

\newcommand{\ABdelayed}[4][]{ % keys, len, tlabel, flabel
  \settimerA{\pAr}{#2}{#3}
  \chronosetTsend{A}{\pAr}\chaddtosend{A}{#2}
  \AB[#1]{#4}
  \chronoendtimerA}

\newcommand{\BAdelayed}[4][]{ % keys, len, tlabel, flabel
  \settimerB{\pBr}{#2}{#3}
  \chronosetTsend{B}{\pBr}\chaddtosend{B}{#2}
  \BA[#1]{#4}
  \chronoendtimerB}

%%: A sets a timer and after a delay sends a frame that cancels it
%%: typical use: ACK timer cancelled by sending of DATA

\newcommand{\ABstop}[4]{ % len, tlabel, delay, flabel
  \settimerA{\pAr}{#1}{#2}
  \pgfmathsetlengthmacro\temp{\pAr+\y*#3}
  \canceltimerA{\temp}
  \chronosetTsend{A}{\temp}
  \AB{#4}}

\newcommand{\BAstop}[4]{ % len, tlabel, delay, flabel
  \settimerB{\pBr}{#1}{#2}
  \pgfmathsetlengthmacro\temp{\pBr+\y*#3}
  \canceltimerB{\temp}
  \chronosetTsend{B}{\temp}
  \BA{#4}}


%%%%%% side decorations (eg for TCP)

\newcommand{\chronoaction}[4]{ % timepos, hpos, l/r, text
  \ifchronoh\else
  \if#3l\def\align{left}\else\def\align{right}\fi
  \draw[<-](#2+\if#3l-\chronoactionoffset\else\chronoactionoffset\fi,#1-\y\chronoactiontimeoffset)
           -- ++(\if#3l180\else0\fi:\chronoactionlength) node[\align]{#4};
  \fi}

\newcommand{\chronostate}[4]{ % timepos, hpos, l/r, text
  \ifchronoh\else
  \if#3l\def\align{left}\else\def\align{right}\fi
  \draw(#2+\if#3l-\chronostateoffset\else\chronostateoffset\fi,#1)
       node[draw,\align]{\textsc{#4}};
  \fi}

\newcommand{\Astate}[1]{\chronostate{\pAs}{\chronopos{A}}{l}{#1}}
\newcommand{\Bstate}[1]{\chronostate{\pBs}{\chronopos{B}}{r}{#1}}

\newcommand{\Aactionstate}[2]{
  \chronoaction{\pAs}{\chronopos{A}}{l}{#1}
  \chronostate{\pAs-5mm}{\chronopos{A}}{l}{#2}}

\newcommand{\Bactionstate}[2]{
  \chronoaction{\pBs}{\chronopos{B}}{r}{#1}
  \chronostate{\pBs-5mm}{\chronopos{B}}{r}{#2}}


\newcommand{\chronosettrans}[1]{
  \ifchronoh
  \gdef\toto{\trans}
  \foreach \x in \chronoshorts {
    \IfBeginWith{#1}{\x}{\gdef\toto{\pgfkeysvalueof{/chrono/short trans}}}{}
  }
  \setlength{\trans}{\toto}
  \fi
}

%% laters -- unlimited number

\newlength{\chronolaterdashedlen}
\setlength{\chronolaterdashedlen}{1cm}
\pgfkeys{/chrono/laters/.initial={0cm/0cm}}

\newcommand{\later}[1]{
  \pgfkeys{/chrono/laters/.append/.expanded={,\pAs/#1}}
  \chaddtosend{A}{#1}
  \chaddtorecv{A}{#1}
  \chaddtosend{B}{#1}
  \chaddtorecv{B}{#1}
}

\newcommand{\chronoflushtimer}[3]{
  \if\pgfkeysvalueof{/chrono/entities/#1/timers/#2/#3/active}t
  \chronoendtimer{#1}{#2}{#3}
  \chronowaittimer{#1}{#2}{#3}
  \else
  \if\pgfkeysvalueof{/chrono/entities/#1/timers/#2/#3/cancel}t
  \chronodebugtimer{flush/cancel}{#1}{#2}{#3}
  \debug{pos#1 = \chronoTsend{#1}}
  \chronowaittimer{#1}{#2}{#3}
  \debug{updated pos#1 = \chronoTsend{#1}}
  \fi\fi}

\newcommand{\chronoalltimers}[1]{
  \foreach \e/\o in {A/l,B/r} {
    \foreach \n in {1,2} {
      #1{\e}{\o}{\n}
      }
    }
  }

\newcommand{\chronofinishtimers}{
% can't use that because of \foreach local scope for body
%  \chronoalltimers{\chronoflushtimer}
  \chronoflushtimer{A}{l}{1}
  \chronoflushtimer{A}{l}{2}
  \chronoflushtimer{B}{r}{1}
  \chronoflushtimer{B}{r}{2}
}

\newcommand{\chronodrawlateronetimer}[3]{
    \setchronotimerhpos{#1}{#2}{#3}{\hpos}
    \draw[graphicbackground,dashed] (\hpos,\tpos) -- ++(0,\y\chronolaterdashedlen);}

% erase part of the vertical lines
\newcommand{\chronodrawlater}[2]{
  \def\tpos{#1+\y*#2/2-\y*\chronolaterdashedlen/2}

  % vertical lines
  \ifchronoh\else
  \draw[graphicbackground,dashed](\chronopos{A},\tpos) -- ++(0,\y\chronolaterdashedlen);
  \draw[graphicbackground,dashed](\chronopos{B},\tpos) -- ++(0,\y\chronolaterdashedlen);
  \fi

  % timer lines
  \ifchronoh\else
  \chronoalltimers{\chronodrawlateronetimer}
  \fi
}

\newcommand{\chronosetpos}[2]{
  \pgfmathsetlengthmacro{\toto}{#2}
  \pgfkeyslet{/chrono/entities/#1/pos}{\toto}}

\newenvironment{chrono}[1][]{
  \newcommand{\fullduplex}{\chronosyncfalse}
  \newcommand{\halfduplex}{\chronosynctrue}
  \chronohfalse
  \setlength{\trans}{0cm}
  \def\chronoarrow{\chronoarrowv}
  \def\y{-1}
  \begin{tikzpicture}[/chrono/.cd,#1]\sffamily
  \chronosetpos{A}{-\chronowidth/2}
  \chronosetpos{B}{\chronowidth/2}
  }
  {
    \ifchronosync\else
    \pgfmathsetlengthmacro\pBs{\pBr+\y*\chronospaceother}
    \pgfmathsetlengthmacro\pAs{\pAr+\y*\chronospaceother}
    \fi

    % finish drawing all timers
    \chronofinishtimers

    % bottom of vert lines is the minimum of A and B (negative values)
    \edef\pos{\pAs}
    \ifdim \pos>\pBs \def\pos{\pBs}\fi
    \draw[thin](\chronopos{A},-\y\chronospacesame/2) node[above]{\pgfkeysvalueof{/chrono/A}}-- (\chronopos{A},\pos);
    \draw[thin](\chronopos{B},-\y\chronospacesame/2) node[above]{\pgfkeysvalueof{/chrono/B}}-- (\chronopos{B},\pos);

    % process later(s)
    \pgfkeys{/chrono/laters/.get=\laters}
    %\debug{laters \laters}
    \foreach \t/\l in \laters {
      %\debug{time \t~ len \l}
      \ifdim\t=0cm\else\chronodrawlater{\t}{\l}\fi
    }
  \end{tikzpicture}
}

\newenvironment{hchrono}[1][]{
  \newcommand{\fullduplex}{\chronosyncfalse}
  \newcommand{\halfduplex}{\chronosynctrue}
  \chronohtrue
  \setlength{\chronospacesame}{0cm}
  \setlength{\chronospaceother}{0cm}
  \def\chronowidth{1cm}
  \setlength{\prop}{3mm}
  \def\chronoarrow{\chronoarrowh}
  \def\y{1}
  \begin{tikzpicture}[/chrono/.cd,#1]\sffamily
  \chronosetpos{A}{-\chronowidth/2}
  \chronosetpos{B}{\chronowidth/2}
  }
  {
    % finish drawing all timers
    \chronofinishtimers
    \draw (-\chronospacesame/2,-\chronopos{A}) node [left]{\pgfkeysvalueof{/chrono/A}};
    \draw (-\chronospacesame/2,-\chronopos{B}) node [left]{\pgfkeysvalueof{/chrono/B}};
  \end{tikzpicture}}  

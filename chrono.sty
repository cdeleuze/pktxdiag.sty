%% TODO: wait, nowait

%% Awaittimer annulé par BAcancel -> ok ?

%% timerAoffset, timerAioffset => don't change during the timer!
%% => only in env?

\RequirePackage{xstring}
\RequirePackage{tikz}
\RequirePackage{pgfkeys}
\usetikzlibrary{decorations.pathmorphing}
\usetikzlibrary{arrows}
\usetikzlibrary{calc}

\colorlet{graphicbackground}{white}

%% removed the >=latex, since it does not conform to opacity=...
\tikzset{/chrono/fleche/.style={/tikz/.cd, very thick, ->,/chrono/.cd}}

\pgfkeys{/chrono/.search also={/tikz}}
\pgfkeys{/chrono/label/.search also={/chrono,/tikz}}
%%%%%% option keys

% arrow cmd keys
\pgfkeys{
  /chrono/global/.is family,
  /chrono/trans/.belongs to family=/chrono/global,
  /chrono/sh/.belongs to family=/chrono/global,
  /chrono/prop/.belongs to family=/chrono/global,
  /chrono/delayed/.belongs to family=/chrono/global,
  /chrono/snote/.belongs to family=/chrono/global,
  /chrono/rnote/.belongs to family=/chrono/global,
  /chrono/snoteoffset/.belongs to family=/chrono/global,
  /chrono/rnoteoffset/.belongs to family=/chrono/global,
  /chrono/name/.belongs to family=/chrono/global,
  /chrono/id/.belongs to family=/chrono/global,
  /chrono/.belongs to family=/chrono/global,
}

%% ZZZ do we need that? yes for prop and trans...
\pgfkeys{/pgf/key filters/active families/.install key filter}

\pgfkeys{/chrono/prop/.default=1cm,/chrono/prop/.code=\setlength{\prop}{#1}}
\pgfkeys{/chrono/trans/.default=10mm,/chrono/trans/.code=\ifchronoh\setlength{\trans}{#1}\fi}
\pgfkeyssetvalue{/chrono/short trans}{7mm}
\pgfkeys{/chrono/sh/.style=trans=5mm}
\pgfkeys{/chrono/delayed/.default=4cm,/chrono/delayed/.code=\chronodelayedtrue\setlength{\chronodelay}{#1}}

\pgfkeys{/chrono/lost/.is if=chronolost}
\pgfkeys{/chrono/cross for lost/.is if=chronocrosslost}
\pgfkeys{/chrono/bad/.is if=chronobad}
\pgfkeys{/chrono/snote/.code=\gdef\chronosnote{#1}}
\pgfkeys{/chrono/rnote/.code=\gdef\chronornote{#1}}
\pgfkeys{/chrono/snoteoffset/.code=\def\chronosnoteoffset{#1}}
\pgfkeys{/chrono/snoteoffset/.default=0}
\pgfkeys{/chrono/rnoteoffset/.code=\def\chronornoteoffset{#1}}
\pgfkeys{/chrono/rnoteoffset/.default=0}
\pgfkeys{/chrono/noteoffset/.style={snoteoffset=#1,rnoteoffset=#1}}
\pgfkeys{/chrono/name/.code=\def\chrononame{#1}}
\pgfkeys{/chrono/opacity/.style={/tikz/opacity=#1,/tikz/text opacity=#1}}

\pgfkeys{/chrono/show label2/.is if=showlabelii}
\pgfkeys{/chrono/hide label/.is if=hidelabel}
\pgfkeyssetvalue{/chrono/ghost}{0}
\pgfkeys{/chrono/hide/.code=\chronosethides{#1}}

\pgfkeyssetvalue{/chrono/label2}{}

%% the default id
\pgfkeyssetvalue{/chrono/id}{default}
\pgfkeyssetvalue{/chrono/ids/default}{}
\pgfkeyssetvalue{/chrono/ids/default/opacity}{1}

%% can not use \foreach since it creates a local scope! :-(
\newcommand{\chronosethides}[1]{
  \pgfkeyssetvalue{/chrono/ids/#1/opacity}{\pgfkeysvalueof{/chrono/ghost}}
%  \foreach \x in { #1 } {
%    \pgfkeyssetvalue{/chrono/ids/\x/opacity}{\pgfkeysvalueof{/chrono/ghost}}
%  }
}


\def\chronosnote{\relax}
\def\chronornote{\relax}
\def\chronosnoteoffset{3mm}
\def\chronornoteoffset{3mm}
\def\chrononame{delayed}

\pgfkeys{/chrono/timerAoffset/.code=\setlength{\timerAoffset}{#1}
  \iftimerAright\addtolength{\timerAoffset}{3mm}\fi}
\pgfkeys{/chrono/timerAioffset/.code=\setlength{\timerAioffset}{#1}
  \iftimerAright\addtolength{\timerAioffset}{3mm}\fi}

\pgfkeys{/chrono/timerBoffset/.code=\setlength{\timerBoffset}{#1}}
\pgfkeys{/chrono/timerBioffset/.code=\setlength{\timerBioffset}{#1}}

\pgfkeys{/chrono/timer offset/.style={/chrono/timerAoffset=#1,/chrono/timerBoffset=#1}}
\pgfkeys{/chrono/timeri offset/.style={/chrono/timerAioffset=#1,/chrono/timerBioffset=#1}}

\pgfkeys{/chrono/timerAbottomup/.is if=timerAbottomup}
\pgfkeys{/chrono/timerAright/.code={
    \iftimerAright\else
       \addtolength{\timerAoffset}{3mm}\addtolength{\timerAioffset}{3mm}
       \timerArighttrue
    \fi}}

% since we fail to define several keys in a \if
\pgfkeys{/chrono/reverse/.style={/tikz/rotate=180,/tikz/above}}

\pgfkeys{/chrono/action time offset/.code=\setlength{\chronoactiontimeoffset}{#1}}
\pgfkeys{/chrono/action offset/.code=\setlength{\chronoactionoffset}{#1}}
\pgfkeys{/chrono/action length/.code=\setlength{\chronoactionlength}{#1}}
\pgfkeys{/chrono/state offset/.code=\setlength{\chronostateoffset}{#1}}

\pgfkeys{/chrono/space same/.code=\setlength{\chronospacesame}{#1}}
\pgfkeys{/chrono/space other/.code=\setlength{\chronospaceother}{#1}}

% chrono env keys
\pgfkeys{/chrono/width/.code=\setlength{\chronowidth}{#1}}
\pgfkeyssetvalue{/chrono/A}{}
\pgfkeys{/chrono/A/.default=A}
\pgfkeyssetvalue{/chrono/B}{}
\pgfkeys{/chrono/B/.default=B}

% by default frames whose label starts with ACK are short
% key no shorts remove this rule
% key hdlc sets names for HDLC
% key shorts=list sets the names of short frames

\def\chronoshorts{ACK}
\def\chronoshortshdlc{RR,RNR,REJ,SREJ,SABM,DISC,UA}

\pgfkeys{/chrono/hdlc/.code=\edef\chronoshorts{\chronoshortshdlc}}
\pgfkeys{/chrono/shorts/.code=\def\chronoshorts{#1}}
\pgfkeys{/chrono/no shorts/.code=\def\chronoshorts{}}


%%%%%% various definitions


\newif\iftimerAbottomup
\newif\iftimerAright

\newif\ifshowlabelii
\newif\ifhidelabel

\newif\ifchronoh\chronohfalse

\newlength{\pAs}\newlength{\pAr}
\newlength{\pBs}\newlength{\pBr}
\newlength{\chronopos}
\newlength{\chronopostrans}
\newlength{\chronoxx}

%\pgfkeys{/pgf/key filter handlers/log/.install key filter handler}

\newlength{\chronospacesame}\setlength{\chronospacesame}{1cm}
\newlength{\chronospaceother}\setlength{\chronospaceother}{5mm}
\newlength{\chronowidth}\setlength{\chronowidth}{3cm}
\newlength{\chronoactiontimeoffset}\setlength{\chronoactiontimeoffset}{1mm}
\newlength{\chronoactionoffset}\setlength{\chronoactionoffset}{1mm}
\newlength{\chronoactionlength}\setlength{\chronoactionlength}{5mm}
\newlength{\chronostateoffset}\setlength{\chronostateoffset}{12mm}

\newif\ifchronobad\chronobadfalse
\newif\ifchronolost\chronolostfalse
\newif\ifchronocrosslost\chronocrosslostfalse
\newif\ifchronodelayed\chronodelayedfalse
\newif\ifchronosync\chronosynctrue

%\newlength{\wait}\setlength{\wait}{0cm}
\newlength{\prop}\setlength{\prop}{0.5cm}
\newlength{\savedprop}
\newlength{\trans}\setlength{\trans}{2cm}
\newlength{\savedtrans}
\newlength{\chronodelay}

\newcommand{\chronoaddto}[2]{
  \ifnum \y=1\addtolength{#1}{#2}\else\addtolength{#1}{-#2}\fi
}

% the drawn frame label can be made of:
%  - l1 label (passed as arg to commands)
%  - the l2 label (passed as label2 option key)
%  - both

\newcommand{\chrononodelabel}[2][1]{ % 1/-1, l1 label
  \ifshowlabelii\ifhidelabel\itshape \pgfkeysvalueof{/chrono/label2}\else
  \ifnum #1=1
  \begin{tabular}{c}
    \itshape \pgfkeysvalueof{/chrono/label2}\\
    #2
  \end{tabular}\else
  \begin{tabular}{c} % for A in hchrono, we want label2 to be below
    #2 \\
    \itshape \pgfkeysvalueof{/chrono/label2}
  \end{tabular}\fi
  \fi\else\ifhidelabel{}\else#2\fi\fi}

% #1 is keys, #2 is 1 or -1 (arrow direction),
% #3 is start pos, #4 is label

\newcommand{\chronoarrowv}[4][]{
  \setlength{\chronopos}{#3}
  {
    \begin{scope}[/chrono/.cd,fleche,#1]
    \ifchronolost\def\lost{2}\else\def\lost{1}\fi
    \ifchronobad

       \draw (#2*-\chronowidth/2,\chronopos)
                 --++(#2*\chronowidth/\lost/3,-\prop/\lost/3)

                 \ifchronosync\else node[near end,above,sloped]{\chrononodelabel{#4}}\fi
    
                 decorate[decoration=zigzag,segment length=2mm]
                 {--++(#2*\chronowidth/\lost/3,-\prop/\lost/3)
                   \ifchronosync node[midway,above,sloped]{\chrononodelabel{#4}}\fi}

                 --++(#2*\chronowidth/\lost/3,-\prop/\lost/3);
                   \ifchronolost\ifchronocrosslost \draw[-]
                   (#2*2mm,\chronopos-\prop/2)node{\Large $\times$}\fi\fi;
    \else
    \ifchronodelayed
       \draw (#2*-\chronowidth/2,\chronopos) 
       .. controls (0,\chronopos-\prop/2) and (0,\chronopos-\chronodelay)
%       .. controls (\chronowidth/2,\chronopos-\prop/2) and (-\chronowidth/2,\chronopos-\chronodelay)
       .. (#2*\chronowidth/2, \chronopos-\chronodelay-\prop)
                   node[above,sloped,pos=0.1]{\chrononodelabel{#4}};

    \else
       \draw (#2*-\chronowidth/2,\chronopos) -- ++(#2*\chronowidth/\lost,-\prop/\lost)
                   node[above,sloped,\ifchronosync midway\else near
                   start\fi]{\chrononodelabel{#4}};
                   \ifchronolost\ifchronocrosslost \draw[-]
                   (#2*2mm,\chronopos-\prop/2)node{\Large $\times$}\fi\fi;
    \fi
    \fi
  \end{scope}
}
}

\newcommand{\chronoarrowh}[4][]{
  \begin{scope}[/chrono/.cd,fleche,|-|,#1]
  \setlength{\chronopos}{#3}
  \setlength{\chronopostrans}{\chronopos}
  \ifnum #2=1\def\toto{above}\else\def\toto{below}\fi
  {
    \addtolength{\chronopostrans}{\trans}
    \ifchronolost\def\lost{2}\else\def\lost{1}\fi
    \ifchronobad

       \draw (\chronopos,#2*\chronowidth/2) --++(\trans/3,0)
                 decorate[decoration=zigzag,segment length=2mm]
                 {--++(\trans/3,0) node[\toto=1mm,midway]{\chrononodelabel[#2]{#4}}}
                 --++(\trans/3,0);
    \else

       \draw (\chronopos,#2*\chronowidth/2)
       -- ++(\trans,0) node[\toto=1mm,midway]{\chrononodelabel[#2]{#4}};
    \fi
    \draw[thin,->] (\chronopostrans,#2*\chronowidth/2)
             -- ++ (\prop/\lost,#2*-\chronowidth/\lost);
    \ifchronolost\ifchronocrosslost \draw[-]
    (\chronopostrans+\prop/2,#2*-2mm) node{\Large $\times$}\fi\fi;

  }
  \end{scope}
}

%%%%%% handling of timers


\newlength{\timerAstart}
\newlength{\timerAend}
\newlength{\timerAoffset}
\newlength{\timerAistart}
\newlength{\timerAiend}
\newlength{\timerAioffset}
\newlength{\timerBstart}
\newlength{\timerBend}
\newlength{\timerBoffset}
\newlength{\timerBistart}
\newlength{\timerBiend}
\newlength{\timerBioffset}


\setlength{\timerAoffset}{4mm}
\setlength{\timerBoffset}{4mm}
\setlength{\timerAioffset}{9mm}
\setlength{\timerBioffset}{9mm}

%% so that arrows of consecutive timers are spaced a very little bit
\newlength{\timertimeoffset}\setlength{\timertimeoffset}{0.2mm}
\pgfkeys{/chrono/timer time offset/.code=\setlength{\timertimeoffset}{#1}}

%% in hchrono, B timers need to be offset down
\newlength{\chronoAhaddoffset}\setlength{\chronoAhaddoffset}{0mm}
\newlength{\chronoAihaddoffset}\setlength{\chronoAihaddoffset}{0mm}
\newlength{\chronoBhaddoffset}\setlength{\chronoBhaddoffset}{7mm}
\newlength{\chronoBihaddoffset}\setlength{\chronoBihaddoffset}{7mm}

\newif\iftimerAactive
\newif\iftimerAcancel
\newif\iftimerAiactive
\newif\iftimerAicancel
\newif\iftimerBactive
\newif\iftimerBcancel
\newif\iftimerBiactive
\newif\iftimerBicancel

\newcommand{\chronoendtimerifactive}[1]{
  \csname iftimer#1active\endcsname
  \csname chronoendtimer#1\endcsname\fi
}

\newcommand{\settimer}[6]{ % start, len, label, A/B, 1/-1, above/below
  \chronoendtimerifactive{#4}
  \csname timer#4activetrue\endcsname
  \csname timer#4cancelfalse\endcsname
%  \expandafter\show\csname timer#4start\endcsname
  \def\timerstart{\csname timer#4start\endcsname}
  \def\timerend{\csname timer#4end\endcsname}
  \def\timeroffset{\csname timer#4offset\endcsname}
  \def\timerhoffset{\csname chrono#4haddoffset\endcsname}
  \setlength{\timerstart}{#1}
  \setlength{\timerend}{#1}\chronoaddto{\timerend}{#2}
  \def\hpos{#5\chronowidth/2+#5\timeroffset}
  \ifchronoh
      \draw[thin,dotted,<->](\timerstart,\hpos-\timerhoffset)
                         -- (\timerend,\hpos-\timerhoffset) node[midway,sloped,#6]{#3};
  \else
      \draw[thin,dotted,<->](\hpos,\timerstart-\timertimeoffset)
                         -- (\hpos,\timerend+\timertimeoffset) node[midway,sloped,#6]{#3};
  \fi
}

\newcommand{\settimerA}[3]{\settimer{#1}{#2}{#3}{A}{\y}{%
    \iftimerAright above\else
    \iftimerAbottomup/chrono/reverse\else below\fi\fi}}
\newcommand{\settimerAi}[3]{\settimer{#1}{#2}{#3}{Ai}{\y}{%
    \iftimerAright above\else
    \iftimerAbottomup/chrono/reverse\else below\fi\fi}}

\newcommand{\settimerB}[3]{\settimer{#1}{#2}{#3}{B}{-\y}{above}}
\newcommand{\settimerBi}[3]{\settimer{#1}{#2}{#3}{Bi}{-\y}{above}}


\newcommand{\canceltimer}[3]{ % pos, A/B, -1/1
  \csname timer#2activefalse\endcsname
  \csname timer#2canceltrue\endcsname
  \def\hpos{-#3\chronowidth/2-#3\csname timer#2offset\endcsname}
  \def\timerhoffset{\csname chrono#2haddoffset\endcsname}
  \ifchronoh
  \draw[thin,<-](\csname timer#2start\endcsname,\hpos-\timerhoffset) --(#1,\hpos-\timerhoffset);
  \else
  \draw[thin,<-](\hpos,\csname timer#2start\endcsname-\timertimeoffset) --(\hpos,#1);
  \fi
}

\newcommand{\canceltimerA}[1]{\canceltimer{#1}{A}{-\y}}
\newcommand{\canceltimerAi}[1]{\canceltimer{#1}{Ai}{-\y}}
\newcommand{\canceltimerB}[1]{\canceltimer{#1}{B}{\y}}
\newcommand{\canceltimerBi}[1]{\canceltimer{#1}{Bi}{\y}}

\newcommand{\chronoendtimer}[2]{
  \csname timer#1activefalse\endcsname
  \csname timer#1cancelfalse\endcsname
  \def\hpos{-#2\chronowidth/2-#2\csname timer#1offset\endcsname}
  \def\timerhoffset{\csname chrono#1haddoffset\endcsname}
  \ifchronoh
    \draw[thin,<->](\csname timer#1start\endcsname,\hpos-\timerhoffset)
                -- (\csname timer#1end\endcsname,\hpos-\timerhoffset);
  \else
    \draw[thin,<->](\hpos,\csname timer#1start\endcsname-\timertimeoffset)
                -- (\hpos,\csname timer#1end\endcsname+\timertimeoffset);
  \fi
}

\newcommand{\chronoendtimerA} {\chronoendtimer{A}{-\y}}
\newcommand{\chronoendtimerAi}{\chronoendtimer{Ai}{-\y}}
\newcommand{\chronoendtimerB} {\chronoendtimer{B}{\y}}
\newcommand{\chronoendtimerBi}{\chronoendtimer{Bi}{\y}}

%% set opacity into \chronoopa, based on current value of key /chrono/id
\newcommand{\chronosetopa}{
 \pgfkeysgetvalue{/chrono/id}{\chronoid}
 \pgfkeysifdefined{/chrono/ids/\chronoid/opacity}
 {\def\chronoopa{\pgfkeysvalueof{/chrono/ids/\chronoid/opacity}}}
 {\def\chronoopa{1}}}

%%%%%% high-level commands

%%: A sends to B

\newcommand{\AB}[2][]{ % [keys], label
  \setlength{\savedtrans}{\trans}
  \setlength{\savedprop}{\prop}
  \pgfkeys{/chrono/global/.activate family}
  \pgfkeysfiltered{/chrono/.cd,#1}
  \chronosettrans{#2}

  \ifchronoh\else\if\chronosnote\relax\else
    \node[align=left,left] at (-\chronowidth/2-\chronosnoteoffset,\pAs) {\chronosnote};\fi
  \fi

  \chronosetopa
  \chronoarrow[#1,opacity=\chronoopa]{1}{\pAs}{#2}
  \setlength{\pBr}{\pAs}\chronoaddto{\pBr}{\prop}
  \chronoaddto{\pBr}{\trans}
  \chronoaddto{\pAs}{\trans}
  \chronoaddto{\pAs}{\chronospacesame}

  \ifchronoh\else\if\chronornote\relax\else
    \node [align=right,right] at (\chronowidth/2+\chronornoteoffset,\pBr-\chronodelay)
          {\chronornote};\fi
    \gdef\chronosnote{\relax}
    \gdef\chronornote{\relax}
  \fi

  \ifchronodelayed
    % no simpler way to _copy_ the length value?
    \pgfmathqparse{\pBr-\chronodelay}
    \pgfkeyslet{/chrono/values/B/\chrononame}{\pgfmathresult}

    \chronodelayedfalse
    \setlength\chronodelay{0mm}
  \fi

  \pgfkeyssetvalue{/chrono/id}{default}
  \setlength{\trans}{\savedtrans}
  \setlength{\prop}{\savedprop}
  \ifchronosync
    \setlength{\pBs}{\pBr}\chronoaddto{\pBs}{\chronospaceother}
  \fi
}

%%: B sends to A 

\newcommand{\BA}[2][]{
  \setlength{\savedtrans}{\trans}
  \setlength{\savedprop}{\prop}
  \pgfkeys{/chrono/global/.activate family}
  \pgfkeysfiltered{/chrono/.cd,#1}
  \chronosettrans{#2}

  \ifchronoh\else\if\chronosnote\relax\else
    \node[align=right,right] at (\chronowidth/2+\chronosnoteoffset,\pBs) {\chronosnote};\fi
  \fi

  \chronosetopa
  \chronoarrow[#1,opacity=\chronoopa]{-1}{\pBs}{#2}
  \setlength{\pAr}{\pBs}\chronoaddto{\pAr}{\prop}
  \chronoaddto{\pAr}{\trans}
  \chronoaddto{\pBs}{\trans}
  \chronoaddto{\pBs}{\chronospacesame}

  \ifchronoh\else\if\chronornote\relax\else
    \node[align=left,left] at (-\chronowidth/2-\chronornoteoffset,\pAr-\chronodelay)
         {\chronornote};\fi
    \gdef\chronosnote{\relax}
    \gdef\chronornote{\relax}
  \fi

  \ifchronodelayed
    % no simpler way to _copy_ the length value?
    \pgfmathqparse{\pAr-\chronodelay}
    \pgfkeyslet{/chrono/values/A/\chrononame}{\pgfmathresult}

    \chronodelayedfalse
    \setlength\chronodelay{0mm}
  \fi

  \pgfkeyssetvalue{/chrono/id}{default}
  \setlength{\trans}{\savedtrans}
  \setlength{\prop}{\savedprop}
  \ifchronosync
    \setlength{\pAs}{\pAr}\chronoaddto{\pAs}{\chronospaceother}
  \fi
}

\newcommand{\Await}[1][1cm]{\chronoaddto{\pAs}{#1}}
\newcommand{\Bwait}[1][1cm]{\chronoaddto{\pBs}{#1}}

%%: A waits for B, B waits for A (usefull only in fullduplex mode)

\newcommand{\AwaitB}{\setlength{\pAs}{\pAr}\chronoaddto{\pAs}{\chronospaceother}}
\newcommand{\BwaitA}{\setlength{\pBs}{\pBr}\chronoaddto{\pBs}{\chronospaceother}}

%%: arg is name set in the delayed frame (key name, defaults to delayed)
\newcommand{\Awaitdelayed}[1][delayed]{
  \setlength{\pAr}{\pgfkeysvalueof{/chrono/values/A/#1}pt}
  \AwaitB}

\newcommand{\Bwaitdelayed}[1][delayed]{
  \setlength{\pBr}{\pgfkeysvalueof{/chrono/values/B/#1}pt}
  \BwaitA}
  

%%: A,B waits for its current timer to expire

\newcommand{\Awaittimer}{
  \ifchronoh \ifnum \pAs<\timerAend\setlength{\pAs}{\timerAend}\fi
  \else      \ifnum \pAs>\timerAend\setlength{\pAs}{\timerAend}\fi   \fi}

\newcommand{\Awaittimeri}{
  \ifchronoh \ifnum \pAs<\timerAiend\setlength{\pAs}{\timerAiend}\fi
  \else      \ifnum \pAs>\timerAiend\setlength{\pAs}{\timerAiend}\fi \fi}

\newcommand{\Bwaittimer}{
  \ifchronoh \ifnum \pBs<\timerBend\setlength{\pBs}{\timerBend}\fi
  \else      \ifnum \pBs>\timerBend\setlength{\pBs}{\timerBend}\fi   \fi}

\newcommand{\Bwaittimeri}{
  \ifchronoh \ifnum \pBs<\timerBiend\setlength{\pBs}{\timerBiend}\fi
  \else      \ifnum \pBs>\timerBiend\setlength{\pBs}{\timerBiend}\fi \fi}


%%: A sends a timed frame to B

\newcommand{\ABtimed}[4][]{  % [keys], flabel, len, tlabel
  \setlength{\chronoxx}{\pAs}
  \addtolength{\chronoxx}{\trans}
  \settimerA{\chronoxx}{#3}{#4}
  \AB[#1]{#2}}

\newcommand{\ABtimedi}[4][]{  % [keys], flabel, len, tlabel
  \setlength{\chronoxx}{\pAs}
  \addtolength{\chronoxx}{\trans}
  \settimerAi{\chronoxx}{#3}{#4}
  \AB[#1]{#2}}

\newcommand{\BAtimed}[4][]{  % [keys], flabel, len, tlabel
  \setlength{\chronoxx}{\pBs}
  \addtolength{\chronoxx}{\trans}
  \settimerB{\chronoxx}{#3}{#4}
  \BA[#1]{#2}}

\newcommand{\BAtimedi}[4][]{  % [keys], flabel, len, tlabel
  \setlength{\chronoxx}{\pBs}
  \addtolength{\chronoxx}{\trans}
  \settimerBi{\chronoxx}{#3}{#4}
  \BA[#1]{#2}
}

%%: A sends a frame that cancels B's timer

\newcommand{\ABcancel}[2][]{
  \AB[#1]{#2}
  \canceltimerB{\pBr}}

\newcommand{\ABcanceli}[2][]{
  \AB[#1]{#2}
  \canceltimerBi{\pBr}}

\newcommand{\BAcancel}[2][]{
  \BA[#1]{#2}
  \canceltimerA{\pAr}}

\newcommand{\BAcanceli}[2][]{
  \BA[#1]{#2}
  \canceltimerAi{\pAr}}

%%: A sets a timer and sends a frame when it expires

\newcommand{\ABdelayed}[4][]{ % keys, len, tlabel, flabel
  \settimerA{\pAr}{#2}{#3}
  \setlength{\pAs}{\pAr}\chronoaddto{\pAs}{#2}
  \AB[#1]{#4}
  \chronoendtimerA}

\newcommand{\BAdelayed}[4][]{ % keys, len, tlabel, flabel
  \settimerB{\pBr}{#2}{#3}
  \setlength{\pBs}{\pBr}\chronoaddto{\pBs}{#2}
  \BA[#1]{#4}
  \chronoendtimerB}

%%: A sets a timer and after a delay sends a frame that cancels it
%%: typical use: ACK timer cancelled by sending of DATA

\newcommand{\ABstop}[4]{ % len, tlabel, delay, flabel
  \settimerA{\pAr}{#1}{#2}
  \setlength{\chronoxx}{\pAr}\chronoaddto{\chronoxx}{#3}
  \canceltimerA{\chronoxx}
  \setlength{\pAs}{\chronoxx}
  \AB{#4}}

\newcommand{\BAstop}[4]{ % len, tlabel, delay, flabel
  \settimerB{\pBr}{#1}{#2}
  \setlength{\chronoxx}{\pBr}\chronoaddto{\chronoxx}{#3}
  \canceltimerB{\chronoxx}
  \setlength{\pBs}{\chronoxx}
  \BA{#4}}


%%%%%% side decorations (eg for TCP)

\newcommand{\chronoAaction}[2]{
  \ifchronoh\else
  \draw[<-](-\chronowidth/2-\chronoactionoffset,#1-\y\chronoactiontimeoffset)
            -- ++(180:\chronoactionlength) node[left]{#2};
  \fi}

\newcommand{\chronoBaction}[2]{
  \ifchronoh\else
  \draw[<-](\chronowidth/2+\chronoactionoffset,#1-\y\chronoactiontimeoffset)
            -- ++(0:\chronoactionlength) node[right]{#2};
  \fi}

\newcommand{\chronoAstate}[2]{
  \ifchronoh\else
  \draw(-\chronowidth/2-\chronostateoffset,#1) node[draw,left]{\textsc{#2}};
  \fi}

\newcommand{\chronoBstate}[2]{
  \ifchronoh\else
  \draw(\chronowidth/2+\chronostateoffset,#1) node[draw,right]{\textsc{#2}};
  \fi}

\newcommand{\Astate}[1]{\chronoAstate{\pAs}{#1}}
\newcommand{\Bstate}[1]{\chronoBstate{\pBs}{#1}}

\newcommand{\Aactionstate}[2]{
  \chronoAaction{\pAs}{#1}
  \chronoAstate{\pAs-5mm}{#2}}

\newcommand{\Bactionstate}[2]{
  \chronoBaction{\pBs}{#1}
  \chronoBstate{\pBs-5mm}{#2}}


\newcommand{\chronosettrans}[1]{
  \ifchronoh
  \gdef\toto{\trans}
  \foreach \x in \chronoshorts {
    \IfBeginWith{#1}{\x}{\gdef\toto{\pgfkeysvalueof{/chrono/short trans}}}{}
  }
  \setlength{\trans}{\toto}
  \fi
}

%% position and length of \later is recorded three times
\newif\ifchronolater
\newlength{\chronolaterpos}
\newlength{\chronolaterlen}
\newif\ifchronolateri
\newlength{\chronolaterposi}
\newlength{\chronolaterleni}
\newif\ifchronolaterii
\newlength{\chronolaterposii}
\newlength{\chronolaterlenii}
\newlength{\chronolaterdashedlen}
\setlength{\chronolaterdashedlen}{1cm}


\newcommand{\later}[1]{
  \ifchronolateri
    \setlength{\chronolaterposii}{\pAs}
    \setlength{\chronolaterlenii}{#1}
    \chronolateriitrue
  \else
  \ifchronolater
    \setlength{\chronolaterposi}{\pAs}
    \setlength{\chronolaterleni}{#1}
    \chronolateritrue
  \else
    \setlength{\chronolaterpos}{\pAs}
    \setlength{\chronolaterlen}{#1}
    \chronolatertrue
  \fi
  \fi
  \chronoaddto{\pAs}{#1}
  \chronoaddto{\pAr}{#1}
  \chronoaddto{\pBs}{#1}
  \chronoaddto{\pBr}{#1}
}

\newcommand{\chronofinishtimers}{
  \iftimerAactive\chronoendtimerA\Awaittimer\fi
  \iftimerBactive\chronoendtimerB\Bwaittimer\fi
  \iftimerAiactive\chronoendtimerAi\Awaittimeri\fi
  \iftimerBiactive\chronoendtimerBi\Bwaittimeri\fi
  \iftimerAcancel\Awaittimer\fi
  \iftimerBcancel\Bwaittimer\fi
  \iftimerAicancel\Awaittimeri\fi
  \iftimerBicancel\Bwaittimeri\fi
}

% erase part of the vertical lines
\newcommand{\chronodrawlater}[2]{
  \def\tpos{#1+\y#2/2-\y\chronolaterdashedlen/2}

  % vertical lines
  \ifchronoh\else
  \draw[graphicbackground,dashed](-\chronowidth/2,\tpos) -- ++(0,\y\chronolaterdashedlen);
  \draw[graphicbackground,dashed]( \chronowidth/2,\tpos) -- ++(0,\y\chronolaterdashedlen);
  \fi

  % timer lines
  \ifchronoh\else
  \draw[graphicbackground,dashed](-\chronowidth/2-\timerAoffset,\tpos)  -- ++(0,\y\chronolaterdashedlen);
  \draw[graphicbackground,dashed](-\chronowidth/2-\timerAioffset,\tpos) -- ++(0,\y\chronolaterdashedlen);
  \draw[graphicbackground,dashed]( \chronowidth/2-\timerBoffset,\tpos)  -- ++(0,\y\chronolaterdashedlen);
  \draw[graphicbackground,dashed]( \chronowidth/2-\timerBioffset,\tpos) -- ++(0,\y\chronolaterdashedlen);
  \fi
}

\newenvironment{chrono}[1][]{
  \newcommand{\fullduplex}{\chronosyncfalse}
  \newcommand{\halfduplex}{\chronosynctrue}
  \chronohfalse
  \setlength{\trans}{0cm}
  \def\chronoarrow{\chronoarrowv}
  \def\y{-1}
  \begin{tikzpicture}[/chrono/.cd,#1]\sffamily
  }
  {
    \ifchronosync\else
    \setlength{\pBs}{\pBr}\chronoaddto{\pBs}{\chronospaceother}
    \setlength{\pAs}{\pAr}\chronoaddto{\pAs}{\chronospaceother}
    \fi

    % finish drawing all timers
    \chronofinishtimers

    % bottom of vert lines is the minimum of A and B (negative values)
    \ifnum \chronopos>\pAs \def\chronopos{\pAs}\fi
    \ifnum \chronopos>\pBs \def\chronopos{\pBs}\fi
    \draw[thin](-\chronowidth/2,-\y\chronospacesame/2) node[above]{\pgfkeysvalueof{/chrono/A}}-- (-\chronowidth/2,\chronopos);
    \draw[thin](\chronowidth/2,-\y\chronospacesame/2) node[above]{\pgfkeysvalueof{/chrono/B}}-- (\chronowidth/2,\chronopos);

    % process later(s)
    \ifchronolater\chronodrawlater{\chronolaterpos}{\chronolaterlen}\fi
    \ifchronolateri\chronodrawlater{\chronolaterposi}{\chronolaterleni}\fi
    \ifchronolaterii\chronodrawlater{\chronolaterposii}{\chronolaterlenii}\fi
    % \pgfkeys{/chrono/later/.show value}
    % \pgfkeys{/chrono/later/.get=\laters}
    % \foreach \p / \l in \laters {
    %   \show\p \show\l
    %  \chronodrawlater{\p}{\l}
    % }
  \end{tikzpicture}
}

\newenvironment{hchrono}[1][]{
  \newcommand{\fullduplex}{\chronosyncfalse}
  \newcommand{\halfduplex}{\chronosynctrue}
  \chronohtrue
  \setlength{\chronospacesame}{0cm}
  \setlength{\chronospaceother}{0cm}
  \setlength{\chronowidth}{1cm}
  \setlength{\prop}{3mm}
  \def\chronoarrow{\chronoarrowh}
  \def\y{1}
  \begin{tikzpicture}[/chrono/.cd,#1]\sffamily
  }
  {
    % finish drawing all timers
    \chronofinishtimers
    \draw (-\chronospacesame/2,\chronowidth/2) node [left]{\pgfkeysvalueof{/chrono/A}};
    \draw (-\chronospacesame/2,-\chronowidth/2) node [left]{\pgfkeysvalueof{/chrono/B}};
  \end{tikzpicture}}  
